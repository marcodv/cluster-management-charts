include:
  - project: 'noah-energy/noah-pipelines-templates'
    file:    'variables.yml'

stages:
- setup
- networking
- monitoring

.connect-to-cluster:
  image: 
    name: registry.gitlab.com/noah-energy/swiss-army-knife-image/swiss-knife:v1.1.0
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-dev-env
    AWS_PROFILE: $TF_USER_DEV_ENV
  before_script:
    - aws sts get-caller-identity
    - aws eks --region $AWS_REGION update-kubeconfig --name $CLUSTER_NAME

.install-aws-load-balancer-controller:
  stage: setup
  extends: .connect-to-cluster 
  script: 
    - |
      helm upgrade --install aws-load-balancer-controller \
        ./charts/aws-load-balancer-controller \
        -f ${ENVIRONMENT_VALUES} \
        -n kube-system 

install-aws-load-balancer-controller:development-cluster:
  extends: .install-aws-load-balancer-controller
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-dev-env
    AWS_PROFILE: $TF_USER_DEV_ENV
    ENVIRONMENT_VALUES: ./charts/aws-load-balancer-controller/values.development.yaml
  rules: 
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - charts/aws-load-balancer-controller/**/*
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_TRIGGERED 


install-aws-load-balancer-controller:production-cluster:
  extends: .install-aws-load-balancer-controller
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-prod-env
    AWS_PROFILE: $TF_USER_PROD_ENV
    ENVIRONMENT_VALUES: ./charts/aws-load-balancer-controller/values.production.yaml
  rules: 
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - charts/aws-load-balancer-controller/**/*
    - if: $CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_TRIGGERED

.install-external-dns:
  stage: setup
  extends: .connect-to-cluster 
  script: 
    - |
      helm upgrade --install external-dns \
        ./charts/external-dns \
        -n kube-system 

install-external-dns:development-cluster:
  extends: .install-external-dns
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-dev-env
    AWS_PROFILE: $TF_USER_DEV_ENV
  rules: 
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - charts/external-dns/**/*
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_TRIGGERED 


install-external-dns:production-cluster:
  extends: .install-external-dns
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-prod-env
    AWS_PROFILE: $TF_USER_PROD_ENV
  rules: 
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - charts/external-dns/**/*
    - if: $CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_TRIGGERED

.install-traefik:
  stage: networking
  extends: .connect-to-cluster 
  script: 
    - |
      helm upgrade --install traefik \
        ./charts/traefik \
        -f ${ENVIRONMENT_VALUES} \
        -n traefik --create-namespace

install-traefik:development-cluster:
  extends: .install-traefik
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-dev-env
    AWS_PROFILE: $TF_USER_DEV_ENV
    ENVIRONMENT_VALUES: ./charts/traefik/values.development.yaml
  rules: 
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - charts/traefik/**/*
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_TRIGGERED


install-traefik:production-cluster:
  extends: .install-traefik
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-prod-env
    AWS_PROFILE: $TF_USER_PROD_ENV
    ENVIRONMENT_VALUES: ./charts/traefik/values.production.yaml
  rules: 
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - charts/traefik/**/*
    - if: $CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_TRIGGERED

.install-monitoring:
  stage: monitoring
  extends: .connect-to-cluster 
  script: 
    - |
      helm upgrade --install monitoring \
        ./charts/monitoring \
        -f ${ENVIRONMENT_VALUES} \
        --set grafana.adminPassword=${GRAFANA_PASSWORD} \
        -n monitoring --create-namespace

install-monitoring:development-cluster:
  extends: .install-monitoring
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-dev-env
    AWS_PROFILE: $TF_USER_DEV_ENV
    ENVIRONMENT_VALUES: ./charts/monitoring/values.development.yaml 
    GRAFANA_PASSWORD: $GRAFANA_PASSWORD_DEV_ENV
  rules: 
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - charts/monitoring/**/*
    - if: $CI_COMMIT_BRANCH == "main" && $CI_PIPELINE_TRIGGERED


install-monitoring:production-cluster:
  extends: .install-monitoring
  variables:
    AWS_REGION: eu-west-1
    CLUSTER_NAME: eks-prod-env
    AWS_PROFILE: $TF_USER_PROD_ENV
    GRAFANA_PASSWORD: $GRAFANA_PASSWORD_PROD_ENV
    ENVIRONMENT_VALUES: ./charts/monitoring/values.production.yaml
  rules: 
    - if: $CI_COMMIT_BRANCH == "production"
      changes:
        - charts/monitoring/**/*
    - if: $CI_COMMIT_BRANCH == "production" && $CI_PIPELINE_TRIGGERED
